"use strict";
var mock = require('mock-fs');
var fse = require('fs-extra');
var path = require('path');
var chai_1 = require('chai');
var GenericFile_1 = require('../../../src/files/GenericFile');
describe('GenericFile', function () {
    describe('#getFullPath()', function () {
        it('combines paths correctly', function () {
            chai_1.assert.equal(new GenericFile_1.GenericFile('first', ['second', 'third'], 'fourth.txt').getFullPath(), path.join('first', 'second', 'third', 'fourth.txt'));
        });
    });
    describe('#read()', function () {
        it('reads file contents correctly', function () {
            var fileContents = 'Hello world!';
            var mockConfig = {
                'test.txt': mock.file({
                    content: fileContents,
                    mode: 777,
                }),
            };
            mock(mockConfig);
            var file = new GenericFile_1.GenericFile('', [], 'test.txt');
            file.read();
            chai_1.assert.equal(file.getContents(), fileContents);
            mock.restore();
        });
    });
    describe('#write()', function () {
        it('writes file contents correctly', function () {
            var fileContents = 'Hello world!';
            var mockConfig = {
                'test.txt': mock.file({
                    content: '',
                    mode: 777,
                }),
            };
            mock(mockConfig);
            var file = new GenericFile_1.GenericFile('/', [], 'test.txt');
            file.setContents(fileContents);
            file.write();
            chai_1.assert.equal(fse.readFileSync('/test.txt', 'utf8'), fileContents);
            mock.restore();
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3Rlc3QvdW5pdC9maWxlcy9HZW5lcmljRmlsZVRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQVFBLElBQVksSUFBSSxXQUFNLFNBQVMsQ0FBQyxDQUFBO0FBQ2hDLElBQVksR0FBRyxXQUFNLFVBQVUsQ0FBQyxDQUFBO0FBQ2hDLElBQVksSUFBSSxXQUFNLE1BQU0sQ0FBQyxDQUFBO0FBQzdCLHFCQUFxQixNQUFNLENBQUMsQ0FBQTtBQUM1Qiw0QkFBMEIsZ0NBQWdDLENBQUMsQ0FBQTtBQUUzRCxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3BCLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRTtRQUN2QixFQUFFLENBQUMsMEJBQTBCLEVBQUU7WUFDM0IsYUFBTSxDQUFDLEtBQUssQ0FDUixJQUFJLHlCQUFXLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxFQUFFLFlBQVksQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUN6RSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUN0RCxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztJQUNILFFBQVEsQ0FBQyxTQUFTLEVBQUU7UUFDaEIsRUFBRSxDQUFDLCtCQUErQixFQUFFO1lBQ2hDLElBQUksWUFBWSxHQUFHLGNBQWMsQ0FBQztZQUNsQyxJQUFJLFVBQVUsR0FBRztnQkFDYixVQUFVLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQztvQkFDbEIsT0FBTyxFQUFFLFlBQVk7b0JBQ3JCLElBQUksRUFBRSxHQUFHO2lCQUNaLENBQUM7YUFDTCxDQUFDO1lBQ0YsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ2pCLElBQUksSUFBSSxHQUFHLElBQUkseUJBQVcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNaLGFBQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ0gsUUFBUSxDQUFDLFVBQVUsRUFBRTtRQUNqQixFQUFFLENBQUMsZ0NBQWdDLEVBQUU7WUFDakMsSUFBSSxZQUFZLEdBQUcsY0FBYyxDQUFDO1lBQ2xDLElBQUksVUFBVSxHQUFHO2dCQUNiLFVBQVUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDO29CQUNsQixPQUFPLEVBQUUsRUFBRTtvQkFDWCxJQUFJLEVBQUUsR0FBRztpQkFDWixDQUFDO2FBQ0wsQ0FBQztZQUNGLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNqQixJQUFJLElBQUksR0FBRyxJQUFJLHlCQUFXLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxVQUFVLENBQUMsQ0FBQztZQUNoRCxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQy9CLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNiLGFBQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7WUFDbEUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L3VuaXQvZmlsZXMvR2VuZXJpY0ZpbGVUZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBHZW5lcmljRmlsZSB0ZXN0c1xuICogQGF1dGhvciBUaW11ciBLdXpoYWdhbGl5ZXYgPHRpbS5rdXpoQGdtYWlsLmNvbT5cbiAqIEBjb3B5cmlnaHQgMjAxNlxuICogQGxpY2Vuc2UgR1BMLTMuMFxuICogQHNpbmNlIDAuMi4wXG4gKi9cblxuaW1wb3J0ICogYXMgbW9jayBmcm9tICdtb2NrLWZzJztcbmltcG9ydCAqIGFzIGZzZSBmcm9tICdmcy1leHRyYSc7XG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHthc3NlcnR9IGZyb20gJ2NoYWknO1xuaW1wb3J0IHtHZW5lcmljRmlsZX0gZnJvbSAnLi4vLi4vLi4vc3JjL2ZpbGVzL0dlbmVyaWNGaWxlJztcblxuZGVzY3JpYmUoJ0dlbmVyaWNGaWxlJywgKCkgPT4ge1xuICAgIGRlc2NyaWJlKCcjZ2V0RnVsbFBhdGgoKScsICgpID0+IHtcbiAgICAgICAgaXQoJ2NvbWJpbmVzIHBhdGhzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgICAgICAgIGFzc2VydC5lcXVhbChcbiAgICAgICAgICAgICAgICBuZXcgR2VuZXJpY0ZpbGUoJ2ZpcnN0JywgWydzZWNvbmQnLCAndGhpcmQnXSwgJ2ZvdXJ0aC50eHQnKS5nZXRGdWxsUGF0aCgpLFxuICAgICAgICAgICAgICAgIHBhdGguam9pbignZmlyc3QnLCAnc2Vjb25kJywgJ3RoaXJkJywgJ2ZvdXJ0aC50eHQnKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJyNyZWFkKCknLCAoKSA9PiB7XG4gICAgICAgIGl0KCdyZWFkcyBmaWxlIGNvbnRlbnRzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgICAgICAgIGxldCBmaWxlQ29udGVudHMgPSAnSGVsbG8gd29ybGQhJztcbiAgICAgICAgICAgIGxldCBtb2NrQ29uZmlnID0ge1xuICAgICAgICAgICAgICAgICd0ZXN0LnR4dCc6IG1vY2suZmlsZSh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGZpbGVDb250ZW50cyxcbiAgICAgICAgICAgICAgICAgICAgbW9kZTogNzc3LFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG1vY2sobW9ja0NvbmZpZyk7XG4gICAgICAgICAgICBsZXQgZmlsZSA9IG5ldyBHZW5lcmljRmlsZSgnJywgW10sICd0ZXN0LnR4dCcpO1xuICAgICAgICAgICAgZmlsZS5yZWFkKCk7XG4gICAgICAgICAgICBhc3NlcnQuZXF1YWwoZmlsZS5nZXRDb250ZW50cygpLCBmaWxlQ29udGVudHMpO1xuICAgICAgICAgICAgbW9jay5yZXN0b3JlKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKCcjd3JpdGUoKScsICgpID0+IHtcbiAgICAgICAgaXQoJ3dyaXRlcyBmaWxlIGNvbnRlbnRzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICAgICAgICAgIGxldCBmaWxlQ29udGVudHMgPSAnSGVsbG8gd29ybGQhJztcbiAgICAgICAgICAgIGxldCBtb2NrQ29uZmlnID0ge1xuICAgICAgICAgICAgICAgICd0ZXN0LnR4dCc6IG1vY2suZmlsZSh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnLFxuICAgICAgICAgICAgICAgICAgICBtb2RlOiA3NzcsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbW9jayhtb2NrQ29uZmlnKTtcbiAgICAgICAgICAgIGxldCBmaWxlID0gbmV3IEdlbmVyaWNGaWxlKCcvJywgW10sICd0ZXN0LnR4dCcpO1xuICAgICAgICAgICAgZmlsZS5zZXRDb250ZW50cyhmaWxlQ29udGVudHMpO1xuICAgICAgICAgICAgZmlsZS53cml0ZSgpO1xuICAgICAgICAgICAgYXNzZXJ0LmVxdWFsKGZzZS5yZWFkRmlsZVN5bmMoJy90ZXN0LnR4dCcsICd1dGY4JyksIGZpbGVDb250ZW50cyk7XG4gICAgICAgICAgICBtb2NrLnJlc3RvcmUoKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcbiJdfQ==
