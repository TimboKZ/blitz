"use strict";
var path = require('path');
var browserSync = require('browser-sync');
var ProjectWatcher_1 = require('./ProjectWatcher');
var ProjectPreviewer = (function () {
    function ProjectPreviewer(configPath, buildPath, eventEmitter) {
        this.configPath = configPath;
        this.buildPath = buildPath;
        this.eventEmitter = eventEmitter;
        this.server = browserSync.create();
    }
    ProjectPreviewer.prototype.startServer = function () {
        var _this = this;
        var projectWatcher = new ProjectWatcher_1.ProjectWatcher(this.configPath, this.buildPath, this.eventEmitter);
        projectWatcher.watch();
        this.server.init({
            server: this.buildPath,
            logPrefix: '> Preview',
        });
        this.eventEmitter.on(ProjectWatcher_1.BUILD_CHANGE_EVENT, function (filePath) {
            _this.server.reload(path.join(_this.buildPath, filePath));
        });
    };
    return ProjectPreviewer;
}());
exports.ProjectPreviewer = ProjectPreviewer;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb3JlL1Byb2plY3RQcmV2aWV3ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQVFBLElBQVksSUFBSSxXQUFNLE1BQU0sQ0FBQyxDQUFBO0FBQzdCLElBQVksV0FBVyxXQUFNLGNBQWMsQ0FBQyxDQUFBO0FBRTVDLCtCQUFpRCxrQkFBa0IsQ0FBQyxDQUFBO0FBT3BFO0lBNEJJLDBCQUFZLFVBQWtCLEVBQUUsU0FBaUIsRUFBRSxZQUEwQjtRQUN6RSxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUMzQixJQUFJLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQztRQUNqQyxJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN2QyxDQUFDO0lBTU0sc0NBQVcsR0FBbEI7UUFBQSxpQkFVQztRQVRHLElBQUksY0FBYyxHQUFHLElBQUksK0JBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVGLGNBQWMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNiLE1BQU0sRUFBRSxJQUFJLENBQUMsU0FBUztZQUN0QixTQUFTLEVBQUUsV0FBVztTQUN6QixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxtQ0FBa0IsRUFBRSxVQUFDLFFBQVE7WUFDOUMsS0FBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUQsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQWxEQSxBQWtEQyxJQUFBO0FBbERZLHdCQUFnQixtQkFrRDVCLENBQUEiLCJmaWxlIjoic3JjL2NvcmUvUHJvamVjdFByZXZpZXdlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgQ29udGFpbnMgY29kZSByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcsIHdhdGNoaW5nIGFuZCBwcmV2aWV3IHNlcnZlclxuICogQGF1dGhvciBUaW11ciBLdXpoYWdhbGl5ZXYgPHRpbS5rdXpoQGdtYWlsLmNvbT5cbiAqIEBjb3B5cmlnaHQgMjAxNlxuICogQGxpY2Vuc2UgR1BMLTMuMFxuICogQHNpbmNlIDAuMi4wXG4gKi9cblxuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCAqIGFzIGJyb3dzZXJTeW5jIGZyb20gJ2Jyb3dzZXItc3luYyc7XG5pbXBvcnQge0V2ZW50RW1pdHRlcn0gZnJvbSAnZXZlbnRzJztcbmltcG9ydCB7UHJvamVjdFdhdGNoZXIsIEJVSUxEX0NIQU5HRV9FVkVOVH0gZnJvbSAnLi9Qcm9qZWN0V2F0Y2hlcic7XG5pbXBvcnQge0Jyb3dzZXJTeW5jSW5zdGFuY2V9IGZyb20gJ2Jyb3dzZXItc3luYyc7XG5cbi8qKlxuICogQGNsYXNzIENyZWF0ZXMgYSB3YXRjaGVkIGFuZCBhIHByZXZpZXcgc2VydmVyXG4gKiBAc2luY2UgMC4yLjBcbiAqL1xuZXhwb3J0IGNsYXNzIFByb2plY3RQcmV2aWV3ZXIge1xuICAgIC8qKlxuICAgICAqIExvY2F0aW9uIG9mIHRoZSBjb25maWcgdGhhdCB3aWxsIGJlIHVzZWQgZm9yIGdlbmVyYXRpb24gb2YgdGhlIHdlYnNpdGVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcml2YXRlIGNvbmZpZ1BhdGg6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFRhcmdldCBidWlsZCBwYXRoXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHJpdmF0ZSBidWlsZFBhdGg6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEluamVjdGVkIGV2ZW50IGVtaXR0ZXIgcmVmZXJlbmNlXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHJpdmF0ZSBldmVudEVtaXR0ZXI6IEV2ZW50RW1pdHRlcjtcblxuICAgIC8qKlxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHByaXZhdGUgc2VydmVyOiBCcm93c2VyU3luY0luc3RhbmNlO1xuXG4gICAgLyoqXG4gICAgICogUHJvamVjdFdhdGNoZXIgY29uc3RydWN0b3JcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25maWdQYXRoOiBzdHJpbmcsIGJ1aWxkUGF0aDogc3RyaW5nLCBldmVudEVtaXR0ZXI6IEV2ZW50RW1pdHRlcikge1xuICAgICAgICB0aGlzLmNvbmZpZ1BhdGggPSBjb25maWdQYXRoO1xuICAgICAgICB0aGlzLmJ1aWxkUGF0aCA9IGJ1aWxkUGF0aDtcbiAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIgPSBldmVudEVtaXR0ZXI7XG4gICAgICAgIHRoaXMuc2VydmVyID0gYnJvd3NlclN5bmMuY3JlYXRlKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhcnRTZXJ2ZXIoKSB7XG4gICAgICAgIGxldCBwcm9qZWN0V2F0Y2hlciA9IG5ldyBQcm9qZWN0V2F0Y2hlcih0aGlzLmNvbmZpZ1BhdGgsIHRoaXMuYnVpbGRQYXRoLCB0aGlzLmV2ZW50RW1pdHRlcik7XG4gICAgICAgIHByb2plY3RXYXRjaGVyLndhdGNoKCk7XG4gICAgICAgIHRoaXMuc2VydmVyLmluaXQoe1xuICAgICAgICAgICAgc2VydmVyOiB0aGlzLmJ1aWxkUGF0aCxcbiAgICAgICAgICAgIGxvZ1ByZWZpeDogJz4gUHJldmlldycsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmV2ZW50RW1pdHRlci5vbihCVUlMRF9DSEFOR0VfRVZFTlQsIChmaWxlUGF0aCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXJ2ZXIucmVsb2FkKHBhdGguam9pbih0aGlzLmJ1aWxkUGF0aCwgZmlsZVBhdGgpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19
