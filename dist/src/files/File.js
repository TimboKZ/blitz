"use strict";
var path = require('path');
var fse = require('fs-extra');
var File = (function () {
    function File(rootPath, relativePath, name) {
        this.rootPath = rootPath;
        this.relativePath = relativePath;
        this.name = name;
    }
    File.prototype.read = function () {
        this.contents = fse.readFileSync(this.getFullPath(), 'utf8');
    };
    File.prototype.write = function () {
        fse.writeFileSync(this.getFullPath(), this.contents);
    };
    File.prototype.getFullPath = function () {
        var relativePathString = path.join.apply(undefined, this.relativePath);
        return path.join(this.rootPath, relativePathString, this.name);
    };
    File.prototype.getContents = function () {
        return this.contents;
    };
    File.prototype.setContents = function (contents) {
        this.contents = contents;
    };
    return File;
}());
exports.File = File;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maWxlcy9GaWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFRQSxJQUFZLElBQUksV0FBTSxNQUFNLENBQUMsQ0FBQTtBQUM3QixJQUFZLEdBQUcsV0FBTSxVQUFVLENBQUMsQ0FBQTtBQU1oQztJQTZCSSxjQUFZLFFBQWdCLEVBQUUsWUFBc0IsRUFBRSxJQUFZO1FBQzlELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFNTSxtQkFBSSxHQUFYO1FBQ0ksSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBTU0sb0JBQUssR0FBWjtRQUNJLEdBQUcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBTU0sMEJBQVcsR0FBbEI7UUFDSSxJQUFJLGtCQUFrQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDdkUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxrQkFBa0IsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUtNLDBCQUFXLEdBQWxCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUtNLDBCQUFXLEdBQWxCLFVBQW1CLFFBQWdCO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFDTCxXQUFDO0FBQUQsQ0F6RUEsQUF5RUMsSUFBQTtBQXpFWSxZQUFJLE9BeUVoQixDQUFBIiwiZmlsZSI6InNyYy9maWxlcy9GaWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBGaWxlIGNvbnRhaW5pbmcgYWxsIGdlbmVyaWMgRmlsZSBjbGFzc2VzIGFuZCBpbnRlcmZhY2VzXG4gKiBAYXV0aG9yIFRpbXVyIEt1emhhZ2FsaXlldiA8dGltLmt1emhAZ21haWwuY29tPlxuICogQGNvcHlyaWdodCAyMDE2XG4gKiBAbGljZW5zZSBHUEwtMy4wXG4gKiBAc2luY2UgMC4yLjBcbiAqL1xuXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0ICogYXMgZnNlIGZyb20gJ2ZzLWV4dHJhJztcblxuLyoqXG4gKiBAY2xhc3MgQSBjbGFzcy5cbiAqIEBzaW5jZSAwLjIuMFxuICovXG5leHBvcnQgY2xhc3MgRmlsZSB7XG4gICAgLyoqXG4gICAgICogUGF0aCBpbiBhIGZpbGUgc3lzdGVtIHRoYXQgd2lsbCBiZSBhcHBlbmRlZCB0byB0aGUgcmVsYXRpdmUgcGF0aFxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHByaXZhdGUgcm9vdFBhdGg6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFBhdGggcmVsYXRpdmUgdG8gdGhlIHJvb3QgcGF0aCBzcGVjaWZpZWQgYWJvdmVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcml2YXRlIHJlbGF0aXZlUGF0aDogc3RyaW5nW107XG5cbiAgICAvKipcbiAgICAgKiBOYW1lIG9mIHRoZSBmaWxlLCBpbmNsdWRpbmcgZXh0ZW5zaW9uXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHJpdmF0ZSBuYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29udGVudHMgb2YgdGhlIGZpbGVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcml2YXRlIGNvbnRlbnRzOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBGaWxlIGNvbnN0cnVjdG9yXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgY29uc3RydWN0b3Iocm9vdFBhdGg6IHN0cmluZywgcmVsYXRpdmVQYXRoOiBzdHJpbmdbXSwgbmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMucm9vdFBhdGggPSByb290UGF0aDtcbiAgICAgICAgdGhpcy5yZWxhdGl2ZVBhdGggPSByZWxhdGl2ZVBhdGg7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVhZHMgZmlsZSBzeXN0ZW0gdG8gZXh0cmFjdCB0aGUgY29udGVudHMgb2YgdGhlIGZpbGVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVhZCgpIHtcbiAgICAgICAgdGhpcy5jb250ZW50cyA9IGZzZS5yZWFkRmlsZVN5bmModGhpcy5nZXRGdWxsUGF0aCgpLCAndXRmOCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdyaXRlcyBhIGZpbGUgdG8gdGhlIGZpbGUgc3lzdGVtXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHVibGljIHdyaXRlKCkge1xuICAgICAgICBmc2Uud3JpdGVGaWxlU3luYyh0aGlzLmdldEZ1bGxQYXRoKCksIHRoaXMuY29udGVudHMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgZnVsbCBwYXRoIHRvIHRoZSBmaWxlXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHVibGljIGdldEZ1bGxQYXRoKCk6IHN0cmluZyB7XG4gICAgICAgIGxldCByZWxhdGl2ZVBhdGhTdHJpbmcgPSBwYXRoLmpvaW4uYXBwbHkodW5kZWZpbmVkLCB0aGlzLnJlbGF0aXZlUGF0aCk7XG4gICAgICAgIHJldHVybiBwYXRoLmpvaW4odGhpcy5yb290UGF0aCwgcmVsYXRpdmVQYXRoU3RyaW5nLCB0aGlzLm5hbWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRDb250ZW50cygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50cztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwdWJsaWMgc2V0Q29udGVudHMoY29udGVudHM6IHN0cmluZykge1xuICAgICAgICB0aGlzLmNvbnRlbnRzID0gY29udGVudHM7XG4gICAgfVxufVxuIl19
