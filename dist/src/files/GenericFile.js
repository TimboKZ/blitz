"use strict";
var path = require('path');
var fse = require('fs-extra');
var GenericFile = (function () {
    function GenericFile(rootPath, relativePath, name) {
        this.rootPath = rootPath;
        this.relativePath = relativePath;
        this.name = name;
        var relativePathString = path.join.apply(undefined, this.relativePath);
        this.fullPath = path.join(this.rootPath, relativePathString, this.name);
    }
    GenericFile.prototype.read = function () {
        this.contents = fse.readFileSync(this.getFullPath(), 'utf8');
    };
    GenericFile.prototype.write = function () {
        fse.writeFileSync(this.getFullPath(), this.contents);
    };
    GenericFile.prototype.getFullPath = function () {
        return this.fullPath;
    };
    GenericFile.prototype.getContents = function () {
        return this.contents;
    };
    GenericFile.prototype.setContents = function (contents) {
        this.contents = contents;
    };
    return GenericFile;
}());
exports.GenericFile = GenericFile;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maWxlcy9HZW5lcmljRmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBUUEsSUFBWSxJQUFJLFdBQU0sTUFBTSxDQUFDLENBQUE7QUFDN0IsSUFBWSxHQUFHLFdBQU0sVUFBVSxDQUFDLENBQUE7QUFjaEM7SUFtQ0kscUJBQVksUUFBZ0IsRUFBRSxZQUFzQixFQUFFLElBQVk7UUFDOUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxrQkFBa0IsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1RSxDQUFDO0lBTU0sMEJBQUksR0FBWDtRQUNJLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakUsQ0FBQztJQU1NLDJCQUFLLEdBQVo7UUFDSSxHQUFHLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQU1NLGlDQUFXLEdBQWxCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUtNLGlDQUFXLEdBQWxCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUtNLGlDQUFXLEdBQWxCLFVBQW1CLFFBQWdCO1FBQy9CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFDTCxrQkFBQztBQUFELENBaEZBLEFBZ0ZDLElBQUE7QUFoRlksbUJBQVcsY0FnRnZCLENBQUEiLCJmaWxlIjoic3JjL2ZpbGVzL0dlbmVyaWNGaWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBDb250YWlucyBhbGwgZ2VuZXJpYyBGaWxlIGNsYXNzZXMgYW5kIGludGVyZmFjZXNcbiAqIEBhdXRob3IgVGltdXIgS3V6aGFnYWxpeWV2IDx0aW0ua3V6aEBnbWFpbC5jb20+XG4gKiBAY29weXJpZ2h0IDIwMTZcbiAqIEBsaWNlbnNlIEdQTC0zLjBcbiAqIEBzaW5jZSAwLjIuMFxuICovXG5cbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgKiBhcyBmc2UgZnJvbSAnZnMtZXh0cmEnO1xuXG4vKipcbiAqIFNwZWNpZmllcyB0aGF0IHRoZSBmaWxlIGlzIGFibGUgdG8gcmVsb2FkIGl0c2VsZlxuICogQHNpbmNlIDAuMi4wXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgSVJlbG9hZGFibGUge1xuICAgIHJlbG9hZDogKCkgPT4gdm9pZDtcbn1cblxuLyoqXG4gKiBAY2xhc3MgQSBjbGFzcy5cbiAqIEBzaW5jZSAwLjIuMFxuICovXG5leHBvcnQgY2xhc3MgR2VuZXJpY0ZpbGUge1xuICAgIC8qKlxuICAgICAqIFBhdGggaW4gYSBmaWxlIHN5c3RlbSB0aGF0IHdpbGwgYmUgYXBwZW5kZWQgdG8gdGhlIHJlbGF0aXZlIHBhdGhcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgcm9vdFBhdGg6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFBhdGggcmVsYXRpdmUgdG8gdGhlIHJvb3QgcGF0aCBzcGVjaWZpZWQgYWJvdmVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgcmVsYXRpdmVQYXRoOiBzdHJpbmdbXTtcblxuICAgIC8qKlxuICAgICAqIEZ1bGwgcGF0aCB0byB0aGUgZmlsZVxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBmdWxsUGF0aDogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICogTmFtZSBvZiB0aGUgZmlsZSwgaW5jbHVkaW5nIGV4dGVuc2lvblxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBuYW1lOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29udGVudHMgb2YgdGhlIGZpbGVcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwcm90ZWN0ZWQgY29udGVudHM6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIEdlbmVyaWNGaWxlIGNvbnN0cnVjdG9yXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgY29uc3RydWN0b3Iocm9vdFBhdGg6IHN0cmluZywgcmVsYXRpdmVQYXRoOiBzdHJpbmdbXSwgbmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMucm9vdFBhdGggPSByb290UGF0aDtcbiAgICAgICAgdGhpcy5yZWxhdGl2ZVBhdGggPSByZWxhdGl2ZVBhdGg7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIGxldCByZWxhdGl2ZVBhdGhTdHJpbmcgPSBwYXRoLmpvaW4uYXBwbHkodW5kZWZpbmVkLCB0aGlzLnJlbGF0aXZlUGF0aCk7XG4gICAgICAgIHRoaXMuZnVsbFBhdGggPSBwYXRoLmpvaW4odGhpcy5yb290UGF0aCwgcmVsYXRpdmVQYXRoU3RyaW5nLCB0aGlzLm5hbWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlYWRzIGZpbGUgc3lzdGVtIHRvIGV4dHJhY3QgdGhlIGNvbnRlbnRzIG9mIHRoZSBmaWxlXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHVibGljIHJlYWQoKSB7XG4gICAgICAgIHRoaXMuY29udGVudHMgPSBmc2UucmVhZEZpbGVTeW5jKHRoaXMuZ2V0RnVsbFBhdGgoKSwgJ3V0ZjgnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXcml0ZXMgYSBmaWxlIHRvIHRoZSBmaWxlIHN5c3RlbVxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHB1YmxpYyB3cml0ZSgpIHtcbiAgICAgICAgZnNlLndyaXRlRmlsZVN5bmModGhpcy5nZXRGdWxsUGF0aCgpLCB0aGlzLmNvbnRlbnRzKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGZ1bGwgcGF0aCB0byB0aGUgZmlsZVxuICAgICAqIEBzaW5jZSAwLjIuMFxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRGdWxsUGF0aCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5mdWxsUGF0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAc2luY2UgMC4yLjBcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Q29udGVudHMoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHNpbmNlIDAuMi4wXG4gICAgICovXG4gICAgcHVibGljIHNldENvbnRlbnRzKGNvbnRlbnRzOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5jb250ZW50cyA9IGNvbnRlbnRzO1xuICAgIH1cbn1cbiJdfQ==
